/* hacktv - Analogue video transmitter for the HackRF                    */
/*=======================================================================*/
/* Copyright 2017 Philip Heron <phil@sanslogic.co.uk>                    */
/*                                                                       */
/* This program is free software: you can redistribute it and/or modify  */
/* it under the terms of the GNU General Public License as published by  */
/* the Free Software Foundation, either version 3 of the License, or     */
/* (at your option) any later version.                                   */
/*                                                                       */
/* This program is distributed in the hope that it will be useful,       */
/* but WITHOUT ANY WARRANTY; without even the implied warranty of        */
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         */
/* GNU General Public License for more details.                          */
/*                                                                       */
/* You should have received a copy of the GNU General Public License     */
/* along with this program.  If not, see <http://www.gnu.org/licenses/>. */

#include "videocrypt.h"

static const _vc_key_t _sky_key[] = {{{             /* * * * * * * * * * * * * * * * * *  Key Offset  ****************************************************/
	0x98, 0x5B, 0x21, 0x91, 0x28, 0x19, 0xD9, 0xD3, /* ---------|---------|            */ /* 0x00 */ /*   Date code ranges:                              */
	0x67, 0x95, 0xFC, 0xE3, 0x06, 0x8A, 0xE8, 0xFB, /*  P02/03  |         |            */ /* 0x08 */ /* -\--- Sky 02: 0x00 -> 0x0F: Jan 1989 -> Apr 1990 */
	0x6A, 0x50, 0x51, 0x01, 0x44, 0x31, 0x3C, 0xD7, /*    key   |         |            */ /* 0x10 */ /*   \-- Sky 03: 0x10 -> 0x12: May 1990 -> Jul 1990 */
	0x41, 0x07, 0x99, 0x64, 0xEE, 0x40, 0x6D, 0xA9, /* ---------|   P04   |            */ /* 0x18 */ /*    \- Sky 04: 0x00 -> 0x14: Jan 1989 -> Sep 1990 */
	0x69, 0xA3, 0x82, 0x9A, 0x08, 0xAD, 0x21, 0x3B, /* ---------|   key   |            */ /* 0x20 */ /* --\-- Sky 04: 0x15 -> 0x18: Oct 1990 -> Jan 1991 */
	0xDE, 0x75, 0x9C, 0x10, 0xE7, 0xFE, 0x5B, 0x0C, /*          |         |            */ /* 0x28 */ /*    \- Sky 05: 0x00 -> 0x18: Jan 1989 -> Jan 1991 */
	0x8F, 0xD2, 0x37, 0xC7, 0x49, 0xDF, 0xBE, 0x6C, /*          |         |            */ /* 0x30 */ /*                                                  */
	0xED, 0x77, 0xF5, 0xEE, 0xE5, 0x95, 0xCD, 0x40, /*    P05   |---------|            */ /* 0x38 */ /*                                                  */
	0xD9, 0xAF, 0x3C, 0xD5, 0xFB, 0xAD, 0x5A, 0x75, /*    key   |---------|            */ /* 0x40 */ /* --\-- Sky 05: 0x19 -> 0x1C: Feb 1991 -> May 1991 */
	0x6D, 0x9B, 0x06, 0x53, 0x0F, 0x89, 0x66, 0xA2, /*          |         |            */ /* 0x48 */ /*    \- Sky 06: 0x00 -> 0x1C  Jan 1989 -> May 1991 */
	0x65, 0xE7, 0x71, 0x1A, 0xB4, 0x88, 0xD7, 0x76, /*          |   P06   |---------|  */ /* 0x50 */ /* --\-- Sky 06: 0x1D -> 0x20  Jun 1991 -> Sep 1991 */
	0x28, 0xD0, 0x4C, 0x6E, 0x86, 0x8C, 0xC8, 0x43, /* ---------|   key   |         |  */ /* 0x58 */ /* -\ \- Sky 07: 0x00 -> 0x32  Jan 1989 -> Mar 1993 */
	0xA9, 0xEC, 0x60, 0x42, 0x05, 0xF2, 0x3D, 0x1C, /*          |         |         |  */ /* 0x60 */ /*   \-- Sky 07: 0x33 -> 0x3A  Apr 1993 -> Nov 1993 */
	0x6C, 0xBC, 0xAF, 0xC3, 0x2B, 0xB5, 0xDC, 0x90, /*          |---------|   P07   |  */ /* 0x68 */ /*       Sky 07: 0x3B -> 0x42  Dec 1993 -> Jul 1994 */
	0xF9, 0x05, 0xEA, 0x51, 0x46, 0x9D, 0xE2, 0x60, /*                    |   key   |  */ /* 0x70 */ /*                                                  */
	0x70, 0x52, 0x67, 0x26, 0x61, 0x49, 0x42, 0x09, /*                    |         |  */ /* 0x78 */ /*                                                  */
	0x50, 0x99, 0x90, 0xA2, 0x36, 0x0E, 0xFD, 0x39  /* ___________________|_________|  */ /* 0x80 */ /*                                                  */
	}}                                              /* * * * * * * * * * * * * * * * * */ /********/ /****************************************************/
};

static const _vc_key_t _skynz_key[] = {{{
    0x46,0x3E,0xAB,0x54,0xBA,0xDB,0x2F,0xFC,
    0x6C,0x04,0x33,0xB2,0x41,0xDF,0xD7,0x69,
    0x70,0x94,0x31,0xD9,0x3F,0x5C,0x99,0x9A,
    0x20,0xB0,0x84,0xFB,0xF0,0x76,0x62,0x1C
	}}
};

static const _vc_key_t _jstv_key[] = {{{
	0x83, 0xD5, 0xFD, 0x19, 0x3D, 0xD6, 0xAC, 0x35,
	0x80, 0x06, 0x63, 0xB3, 0xFF, 0x17, 0xCB, 0xE6,
	0x60, 0x43, 0x95, 0xE3, 0x9C, 0x37, 0xE5, 0xD2,
	0x1F, 0xEC, 0x96, 0xD4, 0x25, 0xEA, 0xFB, 0x99
	}}
};

static const _vc_key_t _tac_key[] = {{{
	0xD9, 0x45, 0x08, 0xDB, 0x7C, 0xF9, 0x56, 0xF7,
	0x58, 0x18, 0x22, 0x54, 0x38, 0xCD, 0x3D, 0x94,
	0x09, 0xE6, 0x8E, 0x0D, 0x9A, 0x86, 0xFC, 0x1C,
	0xA0, 0x19, 0x8F, 0xBC, 0xFD, 0x8D, 0xD1, 0x57,
	0x56, 0xF2, 0xB6, 0x4F, 0xC9, 0xBD, 0x2A, 0xB3,
	0x9D, 0x81, 0x5D, 0xE0, 0x05, 0xB5, 0xB9, 0x26,
	0x67, 0x3C, 0x65, 0xA0, 0xBA, 0x39, 0xC7, 0xAF,
	0x33, 0x24, 0x47, 0xA6, 0x20, 0x1E, 0x14, 0x6F,
	0x48, 0x9B, 0x4D, 0xA6, 0xF9, 0xD9, 0xDF, 0x6E,
	0xAC, 0x84, 0xFA, 0x8B, 0x2E, 0xB6, 0x76, 0x19,
	0xC1, 0xB0, 0xA3, 0xBB, 0x0C, 0xFD, 0x70, 0x72,
	0xCA, 0x55, 0xEF, 0xA0, 0x7F, 0xBF, 0x59, 0xAD
	}}
};

/* Videocrypt key used for Sky 09 series cards */
static const _vc_key_t _sky09_key[] = {{{
	0x91, 0x61, 0x9D, 0x53, 0xA3, 0x49, 0xC9, 0x64,
    0xF1, 0x1D, 0x4D, 0x16, 0x80, 0x50, 0xC4, 0x6F,
    0x48, 0x65, 0x86, 0x69, 0xDC, 0x5F, 0xB0, 0xDE,
    0xE0, 0x67, 0x9C, 0x54, 0x15, 0x4B, 0xAA, 0x39,
    0xA1, 0x4F, 0x85, 0x50, 0x18, 0xFA, 0x93, 0x37,
    0x6F, 0x09, 0x69, 0xF2, 0xC7, 0xAC, 0xC1, 0x67,
    0x39, 0x26, 0xFD, 0x5E, 0xB1, 0x15, 0xDE, 0x95,
    0x80, 0x3A, 0xE8, 0x7D, 0xCE, 0x63, 0xA6, 0x43
	}}
};

/* Key used by Multichoice Central Europe in Videocrypt 2 */
static const _vc_key_t _vc2_key[] = {{{
	0x58, 0x6B, 0x4D, 0x05, 0xB0, 0x69, 0x83, 0x16,
	0xA6, 0x48, 0xDE, 0x5E, 0x0B, 0xAA, 0x49, 0xA9,
	0xC6, 0xE5, 0x93, 0x1A, 0xBE, 0x56, 0x73, 0x20,
	0xFB, 0xF8, 0xCA, 0x08, 0x34, 0x29, 0x8A, 0x9B
	}}
};

static const _vc_key_t _dmx_key[] = {{{
	0x21, 0xAC, 0x5C, 0x87, 0xC3, 0x8B, 0xAB, 0x12,
	0xFE, 0x84, 0x00, 0x94, 0x2C, 0x1B, 0xE5, 0x98,
	0xFD, 0x45, 0x33, 0xF1, 0x7C, 0x9A, 0x71, 0x0B,
	0xD0, 0xF4, 0x22, 0x0D, 0xF3, 0xC2, 0x85, 0x6D
	}}
};

static const _vc_key_t _scast_key[] = {{{
	0x54, 0x49, 0xC8, 0xA1, 0xC9, 0x2D, 0x9C, 0xEE,
	0xCC, 0xA6, 0xEA, 0x12, 0x6E, 0xD3, 0x6C, 0xB7,
	0x42, 0x4A, 0x6B, 0xCA, 0xFF, 0x1E, 0x7F, 0xD1,
	0x68, 0x32, 0x96, 0xDE, 0xAA, 0xDC, 0x36, 0x47
	}}
};

/* Blocks for VC1 free-access decoding */
static _vc_block_t _fa_blocks[] = { { 0x05, VC_PRBS_CW_FA } };

/* Blocks for VC2 free-access decoding */
static _vc2_block_t _fa2_blocks[] = { { 0x9C, VC_PRBS_CW_FA } };

/* Generic conditional access VC1 blocks */
static _vc_block_t _vc1_blocks[] = {
	{
		0x07, 0x12345,
		{
 			{ },{ }, { }, { }, { },
 			{ 0xF8,0x0F,0x2C,0x2E,0x2F,0x14,0x01 }
		},
	},
	{
		0x07, 0x12345,
		{
 			{ },{ }, { }, { }, { },
 			{ 0xF8,0x0F,0x2C,0x2E,0x38,0x3B,0x01 }	
		},
	},
};


/* Blocks for VC1 conditional-access sample, */
/* requires an active Sky 10 (0A) series card to decode */
static _vc_block_t _sky10_blocks[] = {
	{
		0x07, 0x621DE9BBEE504F9B,
		{
			{ 0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4E,0x5C,0x00,0x00,0x36, },
			{ }, { }, { }, { },
			{ 0xC0,0x91,0x06,0xFF,0xDA,0x48,0x0A,0x9F,0x0D,0x34,0x2B,0x3F,0x25,0xFA,0xD4,0x8E,0xB6,0x49,0x6D,0x81,0x81,0xA2,0xC1,0xF2,0xCF,0x10,0x0D,0xC9,0xFA,0x73,0xE5,0xE9, },
			{ 0xF8,0x91,0x5E,0x23,0x9B,0x0F,0xDE,0xBF,0xBD,0x5D,0x2A,0xA6,0x35,0xFE,0xD9,0x31,0xF3,0xD3,0x0A,0x45,0xF5,0xF1,0x98,0xAD,0xDD,0xE8,0x21,0x76,0xE3,0x6D,0x56,0x46, },
		}
	},
	{
		0x07, 0x263E99B64EC501C0,
		{
			{ 0x20,0x00,0x6B,0x55,0x2E,0x4B,0x2E,0x20,0x4C,0x49,0x56,0x49,0x4E,0x47,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x25,0x4F,0x00,0x00,0x1C, },
			{ }, { }, { }, { },
			{ 0xC0,0x91,0x18,0xFF,0xCD,0x09,0xA5,0x87,0x16,0x37,0xF8,0xED,0xFE,0x9D,0xCC,0xFB,0xD9,0x4B,0x6C,0x02,0x42,0x21,0x42,0x93,0x6A,0x2A,0x38,0x3D,0x62,0x67,0xC9,0x9D, },
			{ 0xF8,0x91,0x58,0x23,0x13,0x36,0x09,0x17,0xB7,0x60,0xB1,0xD3,0xF7,0xBA,0x57,0xE7,0x39,0x35,0x48,0xB5,0xCC,0x1D,0x10,0x65,0x1F,0x3C,0xCB,0x62,0xDD,0xB2,0x21,0x08, },
		}
	}
};

/* Blocks for VC1 conditional-access sample, taken from Tyson fight and modified, */
/* requires an active Sky 10 (0A) series card with PPV enabled to decode */

/*
This packet sets up credits and events you wish to purchase. The 12h/34h bytes are
the first program/credit pair. The 56h/78h bytes are the second program/credit pair.
The six bytes 01h-06h are the six event numbers to enable.

53 86 01 00 2D 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 12
34 56 78 01 02 03 04 05 06 00 00 00 00 

For these CWs, the following needs to be sent to the 
card to activate it for event 66.

53 86 01 00 2D
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42
34 00 00 42 00 00 00 00 00 00 00 00 00 

This packet forces the new Pay Per View
data into the card without authorization.

53 74 01 00 20
C0 8F 40 00 00 2E AB F5 19 26 98 B5 46 77 BB E3
32 12 ED 50 49 FF 57 B7 52 C0 0A 02 02 02 02 02
*/

static _vc_block_t _sky10ppv_blocks[] = {
	{
		0x07, 0x7298D7112703C5D9UL,
		{
 			{ 0x20 },
			/* Packet below removes PPV credits - uncomment at your own risk! */
 			//{ 0xC0,0x8F,0x40,0x00,0x00,0x2E,0xAB,0xF5,0x19,0x26,0x98,0xB5,0x46,0x77,0xBB,0xE3,0x32,0x12,0xED,0x50,0x49,0xFF,0x57,0xB7,0x52,0xC0,0x0A,0x02,0x02,0x02,0x02,0x02 }, 
			/* Comment out below line if above is enabled */
			{ }, { }, { }, { },
 			{ 0xF8,0x94,0x9C,0xF0,0x42,0xE6,0x2F,0x2A,0xB7,0x25,0xBC,0x62,0xD8,0x95,0x1E,0x93,0x7C,0x55,0xB8,0x71,0xD5,0x2F,0x29,0x65,0xA2,0x1E,0x3A,0x63,0xF6,0x59,0xF6 },
		},
	},
	{
		0x07, 0x20222974682EFF97UL,
		{
 			{ 0x20,0x00,0x77,0x48,0x41,0x43,0x4B,0x54,0x56,0x20,0x53,0x4B,0x59,0x31,0x30,0x20,0x20,0x50,0x50,0x56,0x20,0x4D,0x4F,0x44,0x45 },
 			{ }, { }, { }, { },
			{ 0xF8,0x94,0x8E,0xF0,0x42,0x7E,0x13,0xCC,0x19,0xDD,0x87,0x60,0x5A,0x78,0x61,0x0B,0x66,0x44,0x51,0x87,0xAE,0x01,0xBC,0x4D,0x47,0x31,0x03,0x80,0x7F,0x8D,0x74 },
		},
	},
};

/* Blocks for VC1 conditional-access sample, taken from MTV UK, */
/* requires an active Sky 11 series card to decode */
static _vc_block_t _sky11_blocks[] = {
	{
		0x07, 0xB2DD55A7BCE178EUL,
		{
 			{ 0x20 },
 			{ }, { }, { }, { },
 			{ 0xF8,0x19,0x10,0x83,0x20,0x85,0x60,0xAF,0x8F,0xF0,0x49,0x34,0x86,0xC4,0x6A,0xCA,0xC3,0x21,0x4D,0x44,0xB3,0x24,0x36,0x57,0xEC,0xA7,0xCE,0x12,0x38,0x91,0x3E }
		},
	},
	{
		0x07, 0xF9885DA50770B80UL,
		{
 			{ 0x20,0x00,0x77,0x20,0x20,0x20,0x48,0x41,0x43,0x4B,0x54,0x56,0x20,0x20,0x20,0x20,0x53,0x4B,0x59,0x31,0x31,0x20,0x4D,0x4F,0x44,0x45 },
 			{ }, { }, { }, { },
 			{ 0xF8,0x19,0x10,0x83,0x20,0xD1,0xB5,0xA9,0x1F,0x82,0xFE,0xB3,0x6B,0x0A,0x82,0xC3,0x30,0x7B,0x65,0x9C,0xF2,0xBD,0x5C,0xB0,0x6A,0x3B,0x64,0x0F,0xA2,0x66,0xBB }	
		},
	},
};

/* Blocks for VC1 conditional-access sample, taken from Sky One, */
/* requires an active Sky 12 series card to decode */
static _vc_block_t _sky12_blocks[] = {
	{
		0x07, 0xC73805F6EF5A1AAB,
		{
 			{ }, { }, { }, { }, { },
 			{ 0xE8,0xCD,0xA7,0x83,0xD1,0x21,0xE5,0x42,0x30,0xF1,0x09,0xBD,0x74,0xB5,0x24,0xC5,0xBF,0x62,0x08,0x1F,0x43,0xE9,0x17,0xA9,0x69,0xE0,0xF6,0x3A,0x35,0x88,0x61 }
		},
	},
	{
		0x07, 0xC389AED26500336B,
		{
 			{ }, { }, { }, { }, { },
 			{ 0xE8,0xCD,0xA7,0x83,0xD1,0x31,0x3F,0xF3,0xB5,0x71,0x01,0x9C,0xF9,0xAE,0xB9,0x8D,0x9C,0x19,0xB1,0x75,0xFA,0xCC,0x90,0x33,0x1E,0xDC,0x38,0xCA,0x58,0x10,0xFA }
		},
	},
};

static _vc_block_t _xtea_blocks[] = {
	{
		0x07, 0x1A298F7C70F4F65UL,
		{
			{ 0x20 },
			{ }, { }, { }, { },
			{ 0xE8,0x49,0x09,0x92,0x1F,0x93,0x20,0x74,0xCE,0x62,0xE4,0xEA,0xB3,0xB3,0xBF,0x8A,0xE3,0xDF,0x26,0x99,0x5E,0x2F,0x0B,0xFB,0x8E,0x45,0x22,0x94,0x4A,0x1A,0x8E }
		}
	},
	{
		0x07, 0xD491B336D3D54BAUL,
		{
			{ 0x20,0x00,0x79,0x20,0x20,0x20,0x48,0x41,0x43,0x4B,0x54,0x56,0x20,0x20,0x20,0x54,0x41,0x43,0x2F,0x58,0x54,0x45,0x41,0x20,0x4D,0x4F,0x44,0x45 },
			{ }, { }, { }, { },
			{ 0xE8,0x49,0x09,0x92,0x1F,0x93,0x20,0x74,0xCE,0x62,0xE4,0xD5,0x04,0x5E,0x8E,0x54,0x91,0x58,0xFF,0x44,0x32,0x72,0xBB,0xEF,0x29,0x8E,0x3C,0x98,0x41,0xD1,0x33 }
		}
	},
};

/* Blocks for VC2 conditional-access sample, taken from Discovery Channel. */
static _vc2_block_t _vc2_blocks[] = {
	{
		0xA0, 0,
		{
			{ 0x21,0x02,0x6B,0x4D,0x55,0x4C,0x54,0x49,0x43,0x48,0x4F,0x49,0x43,0x45},
			{ 0xE1 }, { 0xE1 }, { 0xE1 }, { 0xE1 },
			{ 0xF9,0x53,0x32,0x82,0x20,0xFF,0xFF,0xFF,0xFF },
		}
	},
	{
		0xA0, 0,
		{
			{ 0x21,0x02 },
			{ 0xE1 }, { 0xE1 }, { 0xE1 }, { 0xE1 },
			{ 0xF9,0x53,0x32,0x82,0x20,0xFF,0xFF,0xFF,0xFF },
		}
	},
};

/* Blocks used in PPV/memory card mode */
static _vc_block_t _ppv_blocks[] = {
	{
		0x07, 0,
		{
			{
				0xA8,
				0x04,      /* Pay-view                 */
				0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				0x11,0x00, /* Program number (12 bits) */
				0x00,      /* PPV program rate         */
				0x00,      /* PPV min rate             */
			},
		},
	},
	{
		0x07, 0,
		{
			{
				0xA8,
				0x08,      /* Pay-view + free-view     */
				0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				0x11,0x00, /* Program number (12 bits) */
				0x00,      /* PPV program rate         */
				0x00,      /* PPV min rate             */
			},
			{ 0x20,0x00,0x76,0x20,0x20,0x20,0x48,0x41,0x43,0x4B,0x54,0x56,0x20,0x20,0x20,0x20,0x20,0x50,0x50,0x56,0x20,0x4D,0x4F,0x44,0x45 },
		}
	}
};
